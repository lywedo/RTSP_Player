apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId 'cn.com.buildwin.gosky'
        minSdkVersion 15
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable false
        }
    }
    productFlavors {
        all32 { minSdkVersion 14 }
        all64 { minSdkVersion 21 }
    }

    // Rename
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // Rename APK here
                def fileName = "GoSky-${defaultConfig.versionName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    // Third-party
    compile 'com.github.vilyever:AndroidResource:1.2.0'
    debugCompile(name:'socketclient-debug', ext:'aar')
    releaseCompile(name:'socketclient-release', ext:'aar')

    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    debugCompile(name:'kprogresshud-debug', ext:'aar')
    releaseCompile(name:'kprogresshud-release', ext:'aar')
    compile(name:'android-segmented-1.0.6', ext:'aar')
    // For audio command recognition
    compile project(':aars')
    compile project(':models')

    // ijkplayer
    compile project(':ijkplayer-java')

    all32Compile project(':ijkplayer-armv5')
    all32Compile project(':ijkplayer-armv7a')
    all32Compile project(':ijkplayer-x86')

    all64Compile project(':ijkplayer-armv5')
    all64Compile project(':ijkplayer-armv7a')
    all64Compile project(':ijkplayer-arm64')
    all64Compile project(':ijkplayer-x86')
    all64Compile project(':ijkplayer-x86_64')
}
